<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bh.user.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.bh.user.pojo.Member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="CHAR" />
    <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
    <result column="flag_user" property="flagUser" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="im" property="im" jdbcType="VARCHAR" />
    <result column="is_new" property="isNew" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="s_openid" property="sOpenid" jdbcType="VARCHAR" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="change_phone_time" property="changePhoneTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, phone, salt, headimgurl, flag_user, type, im, is_new, openid, 
    s_openid, unionid, change_phone_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bh.user.pojo.Member" useGeneratedKeys="true" keyProperty="id" >
    insert into member (id, username, password, 
      phone, salt, headimgurl, 
      flag_user, type, im, 
      is_new, openid, s_openid, 
      unionid, change_phone_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{salt,jdbcType=CHAR}, #{headimgurl,jdbcType=VARCHAR}, 
      #{flagUser,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{im,jdbcType=VARCHAR}, 
      #{isNew,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{sOpenid,jdbcType=VARCHAR}, 
      #{unionid,jdbcType=VARCHAR}, #{changePhoneTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bh.user.pojo.Member" useGeneratedKeys="true" keyProperty="id">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="headimgurl != null" >
        headimgurl,
      </if>
      <if test="flagUser != null" >
        flag_user,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="im != null" >
        im,
      </if>
      <if test="isNew != null" >
        is_new,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="sOpenid != null" >
        s_openid,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
      <if test="changePhoneTime != null" >
        change_phone_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=CHAR},
      </if>
      <if test="headimgurl != null" >
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="flagUser != null" >
        #{flagUser,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="im != null" >
        #{im,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null" >
        #{isNew,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sOpenid != null" >
        #{sOpenid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="changePhoneTime != null" >
        #{changePhoneTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bh.user.pojo.Member" useGeneratedKeys="true" keyProperty="id">
    update member
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="headimgurl != null" >
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="flagUser != null" >
        flag_user = #{flagUser,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="im != null" >
        im = #{im,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null" >
        is_new = #{isNew,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sOpenid != null" >
        s_openid = #{sOpenid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="changePhoneTime != null" >
        change_phone_time = #{changePhoneTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bh.user.pojo.Member"  useGeneratedKeys="true" keyProperty="id">
    update member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=CHAR},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      flag_user = #{flagUser,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      im = #{im,jdbcType=VARCHAR},
      is_new = #{isNew,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      s_openid = #{sOpenid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      change_phone_time = #{changePhoneTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  
  
  
  
  
  
  
  <select id="orderArrange" resultMap="BaseResultMap">
    select a.id, a.username, a.headimgurl from member a INNER JOIN order_send_info b ON a.id = b.s_id INNER JOIN member_send c ON a.id = c.m_id 
    and MONTH(b.oc_time) = MONTH(CURDATE()) AND WEEK(b.oc_time) = WEEK(CURDATE())
    GROUP BY b.s_id 
    order by count(b.s_id) 
    desc
  </select>
  
   <select id="selectHeadAndName" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select username, headimgurl
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  
  
  
  
  
  
  
  <!--  **************************************************以下是chengfengyun写的************************************************    -->
  
  <!-- 检查用户是否存在，如果存在则大于1，否则该用户名可用 -->
  <select id="checkuser" parameterType="com.bh.user.pojo.Member" resultType="java.lang.Integer">
  	select count(*) from member where 1=1
  	<if test="username != null" >
      and  username = #{username,jdbcType=VARCHAR}
    </if>
  	 <if test="phone != null" >
       and phone = #{phone,jdbcType=VARCHAR}
      </if>
  </select>
  
    <insert id="insertuser" parameterType="com.bh.user.pojo.Member">
    insert into member (id, username, password, 
      salt, headimgurl,
      type, im,phone)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=CHAR}, #{headimgurl,jdbcType=VARCHAR},  
      #{type,jdbcType=INTEGER}, #{im,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR})
  </insert>
 <!--  <select id="login"  parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from member
    where 1=1
    <if test="username !=null and username !='' ">
    and username = #{username,jdbcType=VARCHAR} 
    </if>
  </select> -->
  
  <select id="login"  parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from member
    where 1=1
    <if test="username !=null and username !='' ">
    and (username = #{username,jdbcType=VARCHAR} or  phone = #{username,jdbcType=VARCHAR})
    </if>
    and `password` is NOT NULL ORDER BY id
  </select>
  
  <update id="updatepwd" parameterType="com.bh.user.pojo.Member">
  update member
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>  
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="headimgurl != null" >
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="flagUser != null" >
        flag_user = #{flagUser,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="im != null" >
        im = #{im,jdbcType=VARCHAR},
      </if>
    </set>
    where 1=1
    <if test="phone != null" >
           and phone = #{phone,jdbcType=VARCHAR} 
      </if>
    <if test="username != null" >
        and username = #{username,jdbcType=VARCHAR}
      </if>  
  </update>
  <!-- 2017-9-28通过member的phone查找 -->
  <select id="selecMemberByPhone" parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap">
  	select * from member where 1=1
  	 <if test="phone != null" >
       and phone = #{phone,jdbcType=VARCHAR}
     </if>
     <if test="id != null" >
        and id = #{id,jdbcType=INTEGER}
     </if>
     <if test="openid != null" >
        and openid = #{openid,jdbcType=VARCHAR}
     </if>
  </select>
  
  
  <select id="getByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from member where  phone = #{0}
  </select>
  
  
  
    <select id="selectByParam" parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap">
  	select * from member where 1=1
  	 <if test="id != null" >
       and id = #{id,jdbcType=INTEGER}
      </if>
        <if test="username != null" >
        and username = #{username,jdbcType=VARCHAR}
      </if>
       <if test="phone != null" >
        and phone = #{phone,jdbcType=VARCHAR}
      </if>
  </select>
  <select id="selectCountByPhone" resultType="java.lang.Integer" parameterType="com.bh.user.pojo.Member">
  select count(*) from member where 
     phone = #{phone,jdbcType=VARCHAR} 
     and id <![CDATA[<>]]> #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUsername" resultType="java.lang.Integer" parameterType="com.bh.user.pojo.Member">
  select COALESCE(count(id),0) from member where 1=1
      <if test="id != null" >
       and id <![CDATA[<>]]> #{id,jdbcType=INTEGER}
      </if>
        <if test="username != null" >
        and username = #{username,jdbcType=VARCHAR}
      </if>
  </select>
  
  <select id="selectMemberMsg" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select m.username,m.phone,m.headimgurl,m.openid,m.s_openid from member m where m.id=#{id}
  </select>
  <!-- zlk -->
  <select id="selectByOpenId" parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap">
  	 select * from member a ,member_user b 
  	 where a.openid = #{openid,jdbcType=VARCHAR}
  	 and b.status!=1
  </select>
  <select id="selectByUnionid" parameterType="com.bh.user.pojo.Member" resultMap="BaseResultMap">
  	select * from member where s_openid = #{sOpenid,jdbcType=VARCHAR}
  </select>
  
  
   <select id="mergeUserByWxAndPhone" statementType="CALLABLE" >
    {call p_merge_user(
      	#{0, mode=IN,jdbcType=INTEGER},
        #{1, mode=IN, jdbcType=INTEGER}
    )}
   </select>
   
  <!-- end -->
  
</mapper>